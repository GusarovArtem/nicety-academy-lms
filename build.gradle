buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.6"
        classpath "org.grails.plugins:hibernate5:7.3.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.4.7"
    }
}

version "0.1"
group "nicety.academy.lms"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.bertramlabs.asset-pipeline"

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    //------------------NOT DEFAULT dependencies--------------------------

    /* Security */
    implementation "org.grails.plugins:spring-security-core:5.0.0-RC1"
    // added jar: "org.springframework.security:spring-security-core:4.2.10.RELEASE"

    /* DB */
    runtimeOnly 'org.postgresql:postgresql:42.2.27'

    /* Micronaut Kafka */
    implementation "io.micronaut.kafka:micronaut-kafka:4.3.1"

    /* JWT */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly    'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly    'io.jsonwebtoken:jjwt-jackson:0.11.5'

    /* Hibernate */
    implementation "org.hibernate:hibernate-core:5.6.14.Final"
    implementation "org.hibernate:hibernate-ehcache:5.6.14.Final"
    implementation("org.hibernate:hibernate-envers:5.6.14.Final") {
        transitive = false
    }
    implementation 'org.dom4j:dom4j:2.1.3' // DocumentFactory error without dependency
    implementation 'xerces:xercesImpl:2.12.2' // Unrecognized feature error without dependency



    /* Guava */
    implementation 'com.google.guava:guava:23.4-jre'

    /* Dateutil */
    implementation 'org.codehaus.groovy:groovy-dateutil:3.0.15'


    //----------------------DEFAULT dependencies--------------------------

    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"

    compileOnly "io.micronaut:micronaut-inject-groovy"

    console "org.grails:grails-console"
    profile "org.grails.profiles:web"

    implementation "org.grails:grails-core"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:gsp"
    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.4.7"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:4.0.0"
    testImplementation "org.seleniumhq.selenium:selenium-api:4.0.0"
    testImplementation "org.seleniumhq.selenium:selenium-support:4.0.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:4.0.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:4.0.0"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        "-Dspring.output.ansi.enabled=always",
        "-noverify",
        "-XX:TieredStopAtLevel=1",
        "-Xmx1024m")
    sourceResources sourceSets.main
    String springProfilesActive = "spring.profiles.active"
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ["-Xmx1024m"]
    }
}

assets {
    minifyJs = true
    minifyCss = true
}